# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-03-05 05:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('created', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('target_uuid', models.CharField(max_length=36)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Definitions',
            fields=[
                ('did', models.AutoField(primary_key=True, serialize=False)),
                ('pos', models.CharField(blank=True, max_length=10)),
                ('definition', models.CharField(max_length=255)),
                ('language', models.CharField(choices=[('zh_cn', 'simplified Chinese'), ('us', 'American English'), ('uk', 'British English')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('lid', models.AutoField(primary_key=True, serialize=False)),
                ('counts', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('created', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('note', models.TextField(max_length=1000)),
                ('is_shared', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Pronuncations',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('ptype', models.CharField(choices=[('zh_cn', 'simplified Chinese'), ('us', 'American English'), ('uk', 'British English')], default='us', max_length=5)),
                ('pronuncation', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('created', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('rdid', models.AutoField(primary_key=True, serialize=False)),
                ('is_know', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Registers',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=100, unique=True)),
                ('rgtype', models.CharField(choices=[('m', 'Email'), ('p', 'Phone')], max_length=1)),
                ('registed_time', models.DateField(auto_now_add=True)),
                ('actived_time', models.DateField(auto_now=True)),
                ('code', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sentences',
            fields=[
                ('created', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('sentence', models.CharField(max_length=255)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('is_offical', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Translations',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('translation', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('daily_task', models.PositiveSmallIntegerField(default=20)),
                ('is_male', models.BooleanField(default=False)),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Levels')),
                ('register', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Registers')),
            ],
        ),
        migrations.CreateModel(
            name='Votes',
            fields=[
                ('created', models.DateField(auto_now_add=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('vid', models.AutoField(primary_key=True, serialize=False)),
                ('target_uuid', models.CharField(max_length=36)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Users')),
            ],
        ),
        migrations.CreateModel(
            name='Words',
            fields=[
                ('wid', models.AutoField(primary_key=True, serialize=False)),
                ('word', models.CharField(max_length=30)),
                ('definition', models.ManyToManyField(to='api.Definitions')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Levels')),
                ('note', models.ManyToManyField(to='api.Notes')),
                ('pronuncation', models.ManyToManyField(to='api.Pronuncations')),
                ('sentence', models.ManyToManyField(to='api.Sentences')),
            ],
            options={
                'ordering': ['word'],
            },
        ),
        migrations.AddField(
            model_name='sentences',
            name='translation',
            field=models.ManyToManyField(to='api.Translations'),
        ),
        migrations.AddField(
            model_name='sentences',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Users'),
        ),
        migrations.AddField(
            model_name='records',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Users'),
        ),
        migrations.AddField(
            model_name='records',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Words'),
        ),
        migrations.AlterUniqueTogether(
            name='pronuncations',
            unique_together=set([('ptype', 'pronuncation')]),
        ),
        migrations.AddField(
            model_name='notes',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Users'),
        ),
        migrations.AlterUniqueTogether(
            name='definitions',
            unique_together=set([('pos', 'definition')]),
        ),
        migrations.AddField(
            model_name='comments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Users'),
        ),
        migrations.AlterUniqueTogether(
            name='words',
            unique_together=set([('level', 'word')]),
        ),
        migrations.AlterUniqueTogether(
            name='votes',
            unique_together=set([('user', 'target_uuid')]),
        ),
        migrations.AlterUniqueTogether(
            name='sentences',
            unique_together=set([('user', 'sentence')]),
        ),
        migrations.AlterUniqueTogether(
            name='notes',
            unique_together=set([('user', 'note')]),
        ),
        migrations.AlterUniqueTogether(
            name='comments',
            unique_together=set([('user', 'target_uuid')]),
        ),
    ]
